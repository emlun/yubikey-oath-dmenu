#!/usr/bin/python3
# yubikey-oath-dmenu - dmenu interface for getting OATH codes from a YubiKey
# Copyright (C) 2017-2018  Emil Lundberg <emil@emlun.se>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import click
import subprocess
import ykman.driver_ccid
import ykman.oath

VERSION = '0.3.0'

notify_enabled = False


@click.pass_context
def notify(ctx, *args, expire_time=3000, urgency='normal'):
    if notify_enabled:
        subprocess.run([
            'notify-send',
            '--app-name=%s' % ctx.info_name,
            '--expire-time=%d' % expire_time,
            '--urgency=%s' % urgency,
            *args
        ])


def notify_err(*args, **kwargs):
    notify(*args, expire_time=5000, urgency='critical', **kwargs)


@click.command()
@click.pass_context
@click.option('--clipboard', metavar='CLIPBOARD',
              help='Passed through as -selection option to xclip')
@click.help_option('-h', '--help')
@click.option('--notify', 'notify_enable', default=False, is_flag=True,
              help='Provide feedback via notify-send')
@click.option('--type', 'typeit', default=False, is_flag=True,
              help='Type code using xdotool instead of copying to clipboard')
@click.version_option(version=VERSION)
def cli(ctx, clipboard, notify_enable, typeit):
    '''
    Select an OATH credential on your YubiKey using dmenu, then copy the
    corresponding OTP to the clipboard using xclip.

    Note that your YubiKey may flash to ask you to touch it before generating
    the code, and this program will give you no other indication of that.
    '''
    global notify_enabled
    notify_enabled = notify_enable

    controllers = {i: ykman.oath.OathController(driver)
                   for i, driver in enumerate(
                       ykman.driver_ccid.open_devices())
                   }

    credentials = {
        k: {cred.printable_key: cred
            for cred in ctrl.list()
            }
        for k, ctrl in controllers.items()
    }

    credential_ids = [cred_id
                      for creds in credentials.values()
                      for cred_id in creds.keys()
                      ]

    if len(credential_ids) != len(set(credential_ids)):
        dups = [id for id in credential_ids if credential_ids.count(id) > 1]
        msg = ('Error: Credential ID present on multiple YubiKeys:\n'
               + '\n'.join(set(dups)))
        notify_err(msg)
        ctx.fail(msg)

    credential_id_to_controller_idx = {
        cred_id: k
        for k, creds in credentials.items()
        for cred_id in creds.keys()
    }

    dmenu_proc = subprocess.Popen(
        ['dmenu', '-p', 'Credential:', '-i'],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
        encoding='utf-8'
    )
    (selected_cred_id, _) = dmenu_proc.communicate('\n'.join(credential_ids))

    if dmenu_proc.returncode == 0:
        selected_cred_id = selected_cred_id.strip()

        ctrl_idx = credential_id_to_controller_idx[selected_cred_id]
        ctrl = controllers[ctrl_idx]

        code = ctrl.calculate(credentials[ctrl_idx][selected_cred_id]).value

        if typeit:
            subprocess.run(['xdotool', 'type', code])
        else:
            xclip_proc = subprocess.Popen(
                ['xclip', '-selection', clipboard] if clipboard else ['xclip'],
                stdin=subprocess.PIPE,
                encoding='utf-8'
            )
            xclip_proc.communicate(code)
            msg = 'OTP copied to clipboard: %s' % selected_cred_id
            click.echo(msg)
            notify(msg)

    else:
        click.echo('Aborted by user.')


if __name__ == '__main__':
    cli()
